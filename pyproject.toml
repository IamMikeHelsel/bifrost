# Bifrost Workspace Configuration
[tool.uv.workspace]
members = [
    "packages/bifrost-core",
    "packages/bifrost",
    "packages/bifrost-opcua", 
    "packages/bifrost-analytics",
    "packages/bifrost-cloud",
    "packages/bifrost-protocols",
    "packages/bifrost-all"
]

[tool.uv]
dev-dependencies = [
    # Testing
    "pytest>=8.0",
    "pytest-asyncio>=0.23",
    "pytest-cov>=4.0",
    "pytest-benchmark>=4.0",
    
    # Type checking
    "mypy>=1.8",
    "types-setuptools",
    
    # Code quality
    "ruff>=0.1.9",
    "pip-audit>=2.6",
    
    # Documentation
    "sphinx>=7.0",
    "sphinx-rtd-theme>=1.3",
    "myst-parser>=2.0",
    
    # Build tools
    "maturin>=1.4",
    "wheel>=0.42",
    "build>=1.0",
    
    # Development utilities
    "ipython>=8.0",
    "rich>=13.0",
    "mdformat>=0.7",
    "pre-commit>=3.6",
    
    # Security scanning
    "bandit>=1.7",
    "safety>=3.0",
    
    # Release tools
    "twine>=4.0"
]

# Global configuration for all packages
[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B008", # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # allow unused imports in __init__.py
"tests/**/*.py" = ["B011"] # allow assert False in tests

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[[tool.mypy.overrides]]
module = [
    "pymodbus.*",
    "asyncua.*", 
    "snap7.*",
    "rich.*",
    "typer.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["packages/*/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov-report=term-missing",
    "--cov-branch"
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "benchmark: marks tests as benchmarks"
]

[tool.coverage.run]
source = ["packages/*/src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/build/*",
    "*/dist/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]