@startuml Production Deployment
!theme blueprint

!define ICONURL https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v2.4.0
!includeurl ICONURL/devicons2/go.puml
!includeurl ICONURL/devicons2/docker.puml
!includeurl ICONURL/font-awesome-5/server.puml
!includeurl ICONURL/font-awesome-5/network_wired.puml

package "Production Environment" {
  
  package "Edge Gateway" {
    node "Industrial PC" as edge_pc {
      component "<$go>\nBifrost Gateway\n(Single Binary)" as gateway
      component "<$docker>\nDocker Container\n(Optional)" as container
      
      gateway --> container : "Alternative\nDeployment"
    }
    
    database "Local Storage" as storage {
      [Configuration]
      [Logs]
      [Metrics Cache]
    }
    
    gateway --> storage
  }
  
  package "Industrial Network" {
    node "<$network_wired>\nFactory Floor" as factory {
      component [Allen-Bradley PLC] as ab_plc
      component [Siemens S7-1500] as siemens_plc
      component [Schneider Modicon] as schneider_plc
      component [OPC-UA Server] as opcua_server
    }
  }
  
  package "IT Network" {
    cloud "Cloud Platform" as cloud {
      component [AWS IoT Core] as aws
      component [Azure IoT Hub] as azure
      component [Prometheus] as prometheus
      component [Grafana] as grafana
    }
    
    node "<$server>\nSCADA System" as scada {
      component [Historical Database] as historian
      component [HMI Application] as hmi
    }
  }
  
  package "Development Environment" {
    node "Developer Workstation" as dev {
      component [VS Code + Bifrost Extension] as vscode
      component [Web Browser] as browser
    }
  }
}

' Network Connections
gateway <--> ab_plc : "Modbus TCP\nEthernet/IP"
gateway <--> siemens_plc : "S7 Protocol\nModbus TCP"
gateway <--> schneider_plc : "Modbus TCP/RTU"
gateway <--> opcua_server : "OPC-UA"

gateway --> aws : "MQTT/HTTPS\nTLS Encrypted"
gateway --> azure : "AMQP/HTTPS\nTLS Encrypted"
gateway --> prometheus : "Metrics Export\nHTTP"
gateway --> historian : "REST API\nWebSocket"

vscode --> gateway : "REST API\nWebSocket\n(Development)"
browser --> grafana : "Dashboard Access"
hmi --> gateway : "Real-time Data\nWebSocket"

note top of gateway
  **Bifrost Gateway**
  - Single 15MB binary
  - 18,879 ops/sec performance
  - < 50MB memory footprint
  - Production-ready reliability
end note

note bottom of factory
  **Industrial Protocols**
  - Modbus TCP/RTU
  - Ethernet/IP (CIP)
  - OPC-UA
  - S7 (Siemens)
end note

note right of cloud
  **Cloud Integration**
  - AWS IoT Core
  - Azure IoT Hub
  - Google Cloud IoT
  - Custom REST APIs
end note

@enduml