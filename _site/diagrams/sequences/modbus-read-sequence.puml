@startuml Modbus Read Sequence
!theme blueprint

actor "VS Code\nExtension" as vscode
participant "Go Gateway\nREST API" as gateway
participant "Modbus\nHandler" as modbus
participant "Connection\nPool" as pool
database "Modbus PLC" as plc

== Tag Read Request ==

vscode -> gateway : GET /api/tags/read\n{device: "plc1", tags: ["temp", "pressure"]}
activate gateway

gateway -> modbus : ReadTags(device, tags)
activate modbus

modbus -> pool : GetConnection(device)
activate pool

alt Connection Available
    pool -> modbus : connection
    deactivate pool
    
    modbus -> plc : Modbus Read Request\n(Function Code 03)
    activate plc
    
    plc -> modbus : Register Values
    deactivate plc
    
    modbus -> pool : ReturnConnection(connection)
    activate pool
    deactivate pool
    
else Connection Pool Exhausted
    pool -> modbus : CreateNewConnection()
    deactivate pool
    
    modbus -> plc : TCP Connect + Modbus Read
    activate plc
    plc -> modbus : Register Values
    deactivate plc
end

modbus -> gateway : TagValues{temp: 25.3, pressure: 1013.2}
deactivate modbus

gateway -> vscode : HTTP 200\n{"values": {"temp": 25.3, "pressure": 1013.2}}
deactivate gateway

note right of gateway
  Performance: 53Âµs average latency
  Throughput: 18,879 ops/sec
end note

note right of pool
  Connection pooling reduces
  TCP overhead for subsequent requests
end note

@enduml