apiVersion: v1
kind: ConfigMap
metadata:
  name: bifrost-gateway-config
  namespace: bifrost-system
data:
  gateway.yaml: |
    gateway:
      port: 8080
      grpc_port: 9090
      metrics_port: 2112
      max_connections: 1000
      data_buffer_size: 10000
      update_interval: 1s
      enable_metrics: true
      log_level: info
      health_check_interval: 30s
      
    protocols:
      modbus:
        default_timeout: 5s
        default_unit_id: 1
        max_connections: 100
        connection_timeout: 10s
        read_timeout: 5s
        write_timeout: 5s
        enable_keep_alive: true
        connection_pool_size: 50
        
    redis:
      host: redis-service
      port: 6379
      password: ""
      db: 0
      max_retries: 3
      retry_delay: 1s
      
    logging:
      level: info
      format: json
      file: /logs/gateway.log
      max_size: 100MB
      max_age: 30
      max_backups: 10
      
    security:
      enable_tls: false
      cert_file: ""
      key_file: ""
      ca_file: ""
      
    monitoring:
      prometheus:
        enabled: true
        path: /metrics
        port: 2112
      jaeger:
        enabled: false
        endpoint: ""
        
    performance:
      max_goroutines: 1000
      read_buffer_size: 4096
      write_buffer_size: 4096
      tcp_keep_alive: true
      tcp_no_delay: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bifrost-gateway-scripts
  namespace: bifrost-system
data:
  health-check.sh: |
    #!/bin/bash
    set -e
    
    # Check if the gateway is responding
    response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/health)
    if [ $response -eq 200 ]; then
      echo "Gateway is healthy"
      exit 0
    else
      echo "Gateway is not healthy (HTTP $response)"
      exit 1
    fi
    
  readiness-check.sh: |
    #!/bin/bash
    set -e
    
    # Check if the gateway is ready to accept connections
    response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/readiness)
    if [ $response -eq 200 ]; then
      echo "Gateway is ready"
      exit 0
    else
      echo "Gateway is not ready (HTTP $response)"
      exit 1
    fi
    
  startup-check.sh: |
    #!/bin/bash
    set -e
    
    # Check if the gateway has started up properly
    for i in {1..30}; do
      if curl -s -f http://localhost:8080/health > /dev/null; then
        echo "Gateway started successfully"
        exit 0
      fi
      echo "Waiting for gateway to start... ($i/30)"
      sleep 2
    done
    
    echo "Gateway failed to start within timeout"
    exit 1