# Pre-commit hooks configuration for Bifrost Gateway
repos:
  # Go formatting and linting
  - repo: https://github.com/dnephin/pre-commit-golang
    rev: v0.5.1
    hooks:
      - id: go-fmt
        name: go-fmt
        description: Format Go code
        entry: gofmt
        language: system
        files: \.go$
        args: [-w]
      - id: go-mod-tidy
        name: go-mod-tidy
        description: Tidy Go modules
        entry: go
        language: system
        files: go\.(mod|sum)$
        args: [mod, tidy]
      - id: go-vet-mod
        name: go-vet
        description: Run go vet
        entry: go
        language: system
        files: \.go$
        args: [vet, ./...]
      - id: go-build-mod
        name: go-build
        description: Build Go code
        entry: go
        language: system
        files: \.go$
        args: [build, ./...]

  # Starlark formatting and linting
  - repo: https://github.com/keith/pre-commit-buildifier
    rev: 6.4.0
    hooks:
      - id: buildifier
        name: buildifier
        description: Format Starlark files
        args: [--lint=warn]
      - id: buildifier-lint
        name: buildifier-lint
        description: Lint Starlark files
        args: [--lint=warn, --mode=check]

  # General code quality
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
        name: trailing-whitespace
        description: Trim trailing whitespace
        exclude: \.md$
      - id: end-of-file-fixer
        name: end-of-file-fixer
        description: Fix end of files
        exclude: \.md$
      - id: check-yaml
        name: check-yaml
        description: Check YAML files
        files: \.(yaml|yml)$
      - id: check-json
        name: check-json
        description: Check JSON files
        files: \.json$
      - id: check-merge-conflict
        name: check-merge-conflict
        description: Check for merge conflicts
      - id: check-case-conflict
        name: check-case-conflict
        description: Check for case conflicts
      - id: check-added-large-files
        name: check-added-large-files
        description: Check for large files
        args: [--maxkb=1000]
      - id: check-executables-have-shebangs
        name: check-executables-have-shebangs
        description: Check that executables have shebangs
      - id: check-shebang-scripts-are-executable
        name: check-shebang-scripts-are-executable
        description: Check that shell scripts are executable

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: detect-secrets
        description: Detect secrets in code
        args: [--baseline, .secrets.baseline]
        exclude: (\.lock$|\.sum$|\.mod$)

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: hadolint
        description: Lint Dockerfile
        files: Dockerfile.*

  # Commit message formatting
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        name: conventional-commit
        description: Check commit message format
        stages: [commit-msg]
        args: [--optional-scope]

# Default language version
default_language_version:
  python: python3.11

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false