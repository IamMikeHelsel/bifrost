# Debug version with shell and debugging tools
FROM golang:1.22-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the binary with debug symbols
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -gcflags="all=-N -l" \
    -o bifrost-gateway-debug \
    ./cmd/gateway

# Runtime stage with debugging tools
FROM alpine:3.19

# Install runtime dependencies and debugging tools
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    curl \
    wget \
    netcat-openbsd \
    tcpdump \
    strace \
    htop \
    procps \
    && rm -rf /var/cache/apk/*

# Create app user
RUN addgroup -g 1000 app && \
    adduser -u 1000 -G app -s /bin/sh -D app

# Set working directory
WORKDIR /app

# Copy the binary and config
COPY --from=builder /app/bifrost-gateway-debug /app/bifrost-gateway
COPY --from=builder /app/gateway.yaml /app/gateway.yaml

# Change ownership
RUN chown -R app:app /app

# Switch to app user
USER app

# Expose ports
EXPOSE 8080 9090 2112

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the binary
ENTRYPOINT ["/app/bifrost-gateway"]
CMD ["-config", "/app/gateway.yaml", "-log-level", "debug"]