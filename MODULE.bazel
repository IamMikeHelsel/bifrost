module(
    name = "bifrost",
    version = "0.1.0"
)

bazel_dep(name = "rules_python", version = "0.40.0")
bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "gazelle", version = "0.40.0")
bazel_dep(name = "rules_nodejs", version = "6.3.0")
bazel_dep(name = "aspect_rules_js", version = "2.1.0")
bazel_dep(name = "aspect_rules_ts", version = "3.5.0")

# Python toolchain configuration
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(python_version = "3.12") # Consider matching this with your project's Python version if different
use_repo(python, "python_versions")

# Setup pip to parse requirements_lock.txt
pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse_requirements(
    name = "pip_deps", # This creates a repository named @pip_deps
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pip_deps")

# Go dependencies
go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go-gateway/go.mod")
use_repo(go_deps, 
    "com_github_goburrow_modbus",
    "com_github_gorilla_websocket", 
    "com_github_prometheus_client_golang",
    "com_github_sony_gobreaker",
    "com_github_stretchr_testify",
    "go_uber_org_zap",
    "in_gopkg_yaml_v3"
)

# Node.js toolchain configuration
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node")
node.toolchain(node_version = "18.20.4")
use_repo(node, "nodejs_toolchains")

# npm dependencies
npm = use_extension("@aspect_rules_ts//npm:extensions.bzl", "npm")
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//vscode-extension:package-lock.json",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")