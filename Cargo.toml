[workspace]
resolver = "2"
members = [
    "packages/bifrost-core",
    "packages/bifrost",
    # Future packages
    # "packages/bifrost-opcua",
    # "packages/bifrost-analytics",
]

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "MIT"
authors = ["Bifrost Contributors <hello@bifrost.dev>"]
repository = "https://github.com/bifrost-dev/bifrost"
homepage = "https://bifrost.readthedocs.io"

[workspace.dependencies]
# PyO3 for Python-Rust interoperability
pyo3 = { version = "0.22", features = ["extension-module"] }

# Async runtime
tokio = { version = "1.40", features = ["full"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Utilities
bytes = "1.7"
uuid = { version = "1.10", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }

# Numeric operations
num-traits = "0.2"
byteorder = "1.5"

# Logging (compatible with Python)
log = "0.4"

# Protocol-specific dependencies (for future use)
# modbus = "0.5"
# opcua = "0.12"

[workspace.lints.rust]
unsafe_code = "forbid"
unused_imports = "warn"
unused_mut = "warn"
unused_variables = "warn"

[workspace.lints.clippy]
# Deny these for high code quality
enum_glob_use = "deny"
unwrap_used = "deny"
expect_used = "allow"
panic = "deny"

# Warn on these for better practices - set priority to avoid conflicts
pedantic = { level = "warn", priority = -1 }
nursery = { level = "warn", priority = -1 }
cargo = { level = "warn", priority = -1 }

# Allow some pedantic lints that are too strict for industrial code
too_many_arguments = "allow"
module_name_repetitions = "allow"
similar_names = "allow"
cast_possible_truncation = "allow"
cast_precision_loss = "allow"
doc_markdown = "allow"
cargo_common_metadata = "allow"
useless_conversion = "allow"
multiple_crate_versions = "allow"