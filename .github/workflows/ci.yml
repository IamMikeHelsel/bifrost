name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Python packages testing
  test-python:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.12', '3.13']
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "**/pyproject.toml"

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Run linter
      run: |
        uv run ruff check .

    - name: Run type checker
      run: |
        uv run mypy packages/*/src

    - name: Run Python tests
      run: |
        uv run pytest packages/*/tests -v

  # Go gateway testing
  test-go:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go-version: ['1.22', '1.23']
        os: [ubuntu-latest, macos-latest]
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go ${{ matrix.go-version }}
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('go-gateway/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Download Go dependencies
      working-directory: go-gateway
      run: go mod download

    - name: Run Go linter
      working-directory: go-gateway
      run: |
        go fmt ./...
        go vet ./...

    - name: Build Go gateway
      working-directory: go-gateway
      run: go build -v ./cmd/gateway

    - name: Run Go tests
      working-directory: go-gateway
      run: go test -v -race ./...

    - name: Run Go benchmarks
      working-directory: go-gateway
      run: go test -v -bench=. -benchmem ./internal/protocols/

  # VS Code extension testing
  test-vscode:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: vscode-extension/package-lock.json

    - name: Install dependencies
      working-directory: vscode-extension
      run: npm ci

    - name: Run TypeScript compiler
      working-directory: vscode-extension
      run: npm run compile

    - name: Run linter
      working-directory: vscode-extension
      run: npm run lint

    - name: Run tests
      working-directory: vscode-extension
      run: npm test

