name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # First job attempts to use self-hosted runner
  test-self-hosted:
    runs-on: self-hosted
    timeout-minutes: 5  # Prevent hanging if runner is stuck
    continue-on-error: true  # Don't fail the workflow if this job fails
    outputs:
      runner-available: ${{ steps.check.outcome == 'success' }}
    steps:
      - id: check
        name: Check runner availability
        run: echo "Self-hosted runner is available"
        timeout-minutes: 1

  # Main build job that runs on appropriate runner
  build:
    needs: test-self-hosted
    runs-on: ${{ needs.test-self-hosted.outputs.runner-available == 'true' && 'self-hosted' || 'ubuntu-latest' }}
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "**/pyproject.toml"

    - name: Install dependencies
      run: |
        uv sync --all-extras --dev

    - name: Run linter
      run: |
        uv run ruff check .

    - name: Run type checker
      run: |
        uv run mypy .

    - name: Run tests
      run: |
        uv run pytest -xvs

  # Rust/Bazel build job
  build-rust:
    needs: test-self-hosted
    runs-on: ${{ needs.test-self-hosted.outputs.runner-available == 'true' && 'self-hosted' || 'ubuntu-latest' }}
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Bazel
      uses: bazel-contrib/setup-bazel@0.8.5
      with:
        bazelisk-cache: true
        disk-cache: ${{ github.workflow }}
        repository-cache: true

    - name: Build Rust extensions
      run: |
        bazel build //packages/bifrost/native:bifrost_native

    - name: Run Rust tests
      run: |
        bazel test //packages/bifrost/native:all

  # Alternative approach using workflow dispatch for manual control
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [build, build-rust]
    runs-on: ${{ github.event.inputs.use-self-hosted == 'true' && 'self-hosted' || 'ubuntu-latest' }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy or publish
      run: |
        echo "Deployment steps would go here"