name: Build

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]

permissions:
  contents: read
  actions: write

jobs:
  build-python:
    name: Build Python Packages
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        
      - name: Set up Python
        run: uv python install 3.12
        
      - name: Build packages
        run: |
          for pkg in packages/*/; do
            if [ -f "$pkg/pyproject.toml" ]; then
              echo "Building $pkg"
              (cd "$pkg" && uv build)
            fi
          done
          
      - name: List built packages
        run: |
          echo "Built packages:"
          find packages -name "*.whl" -o -name "*.tar.gz" | sort
          
      - name: Upload Python artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: |
            packages/*/dist/*.whl
            packages/*/dist/*.tar.gz

  build-go:
    name: Build Go Gateway
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
          - os: macos-latest
            goos: darwin
            goarch: amd64
          - os: windows-latest
            goos: windows
            goarch: amd64
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go-gateway/go.mod') }}
          
      - name: Build Go gateway
        working-directory: go-gateway
        run: |
          go build -ldflags="-s -w" -o bin/bifrost-gateway-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} ./cmd/gateway
          
      - name: Upload Go artifacts
        uses: actions/upload-artifact@v4
        with:
          name: go-gateway-${{ matrix.goos }}-${{ matrix.goarch }}
          path: go-gateway/bin/bifrost-gateway-*

  build-vscode:
    name: Build VS Code Extension
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: vscode-extension/package-lock.json
          
      - name: Install dependencies
        working-directory: vscode-extension
        run: npm ci
        
      - name: Package extension
        working-directory: vscode-extension
        run: |
          npm install -g vsce
          vsce package
          
      - name: Upload VS Code artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vscode-extension
          path: vscode-extension/*.vsix