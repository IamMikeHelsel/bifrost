# This BUILD file assumes that Python dependencies like fastapi and uvicorn
# are made available to Bazel through pip.parse_requirements in MODULE.bazel.
#
# Example configuration in MODULE.bazel:
# ```
# pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
# pip.parse_requirements(
#     name = "pip_deps", # This defines the repository name @pip_deps
#     requirements_lock = "//:requirements_lock.txt",
# )
# use_repo(pip, "pip_deps")
# ```
# Dependencies can then be referenced as "@pip_deps//fastapi", "@pip_deps//uvicorn".

load("@rules_python//python:defs.bzl", "py_binary")

py_binary(
    name = "bifrost_gui_server",
    srcs = ["main.py"],
    # When this binary is run (e.g., "bazel run //gui/backend:bifrost_gui_server"),
    # the __main__ block in main.py will be executed, starting the uvicorn server.
    main = "main.py",
    deps = [
        # These targets are expected to be provided by the pip.parse_requirements
        # rule in your MODULE.bazel file, using a repository named "pip_deps".
        # If you use a different name for the parsed pip dependencies repo,
        # update these paths accordingly.
        "@pip_deps//fastapi",
        "@pip_deps//uvicorn",
        # Add other direct dependencies of main.py here if any.
    ],
    # This visibility allows other parts of your Bazel project (like a main //gui:BUILD.bazel)
    # to depend on this server.
    visibility = ["//gui:__pkg__"],
)
