# BUILD.bazel for bifrost-core (Python-only package)
# Core abstractions and base classes for the Bifrost industrial IoT framework

load("@rules_python//python:defs.bzl", "py_library", "py_test")
load("@rules_python//python:packaging.bzl", "py_wheel")

# Main library target
py_library(
    name = "bifrost_core",
    srcs = glob(["src/bifrost_core/**/*.py"]),
    imports = ["src"],
    deps = [
        "@pypi//pydantic",
        "@pypi//typing_extensions",
    ],
    visibility = ["//visibility:public"],
)

# Wheel distribution target
py_wheel(
    name = "wheel",
    distribution = "bifrost-core",
    version = "0.1.0",
    deps = [":bifrost_core"],
    wheel_metadata = {
        "Author": "Bifrost Contributors",
        "Author-email": "hello@bifrost.dev",
        "Description-Content-Type": "text/markdown",
        "License": "MIT",
        "Summary": "Core abstractions for Bifrost industrial IoT framework",
    },
)

# Test targets
py_test(
    name = "test_base",
    srcs = ["tests/test_base.py"],
    deps = [
        ":bifrost_core",
        "@pypi//pytest",
        "@pypi//pytest_asyncio",
    ],
)

py_test(
    name = "test_events",
    srcs = ["tests/test_events.py"],
    deps = [
        ":bifrost_core",
        "@pypi//pytest",
        "@pypi//pytest_asyncio",
    ],
)

py_test(
    name = "test_features",
    srcs = ["tests/test_features.py"],
    deps = [
        ":bifrost_core",
        "@pypi//pytest",
        "@pypi//pytest_asyncio",
    ],
)

py_test(
    name = "test_pooling",
    srcs = ["tests/test_pooling.py"],
    deps = [
        ":bifrost_core",
        "@pypi//pytest",
        "@pypi//pytest_asyncio",
    ],
)

py_test(
    name = "test_typing",
    srcs = ["tests/test_typing.py"],
    deps = [
        ":bifrost_core",
        "@pypi//pytest",
        "@pypi//pytest_asyncio",
    ],
)

# Convenience target to run all tests
test_suite(
    name = "tests",
    tests = [
        ":test_base",
        ":test_events", 
        ":test_features",
        ":test_pooling",
        ":test_typing",
    ],
)